# Our first Python object

#!/usr/bin/python3
class PartyAnimal:
    x = 0

    def party(self):
        self.x = self.x + 1
        print('So far', self.x)

an = PartyAnimal()
an.party()
an.party()
an.party()
# Classes as types
PartyAnimal.party(an)
print('Type', type(an))
print('Dir', dir(an))
print('Type', type(an.x))
print('Type', type(an.party))

# Object lifecycle
#!/usr/bin/python3
class PartyAnimal:
    x = 0

    def __init__(self):
        print('I am constructed')

    def party(self):
        self.x = self.x + 1
        print('So far', self.x)

    def __del__(self):
        print('I am destructed', self.x)

an = PartyAnimal()
an.party()
an.party()
print('an type', type(an))

print('an = 42')
an = 42
print('an type', type(an))



# Multiple instances
#!/usr/bin/python3
class PartyAnimal:
    x = 0
    name = ''

    def __init__(self, nam):
        self.name = nam
        print(self.name, 'constructed')

    def party(self):
        self.x = self.x + 1
        print(self.name, 'party count', self.x)

s = PartyAnimal('Sally')
j = PartyAnimal('Jim')

s.party()
j.party()
s.party()

# Inheritance
#!/usr/bin/python3
from party import PartyAnimal

class CricketFan(PartyAnimal):
    points = 0

    def six(self):
        self.points = self.points + 6
        self.party()
        print(self.name, 'points', self.points)

s = PartyAnimal('Sally')
s.party()
j = CricketFan('Jim')
j.party()
j.six()
print(dir(j))
